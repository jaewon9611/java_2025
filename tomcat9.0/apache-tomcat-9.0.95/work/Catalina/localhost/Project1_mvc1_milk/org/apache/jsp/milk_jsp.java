/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-03-24 00:13:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.net.ConnectException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public final class milk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.net.ConnectException");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Weeeeeeeeeeee</title>\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"mt-4 p-5 bg-primary text-white rounded\">\r\n");
      out.write("  <h1>Jumbotron Example</h1>\r\n");
      out.write("  <p>PreparedStastement Ex</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-3\">\r\n");
      out.write("  <table class=\"table table-hover\">\r\n");
      out.write("  <caption>Milk Menu</caption>\r\n");
      out.write("      <thead>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th scope=\"col\">NO</th>\r\n");
      out.write("        <th scope=\"col\">NAME</th>\r\n");
      out.write("        <th scope=\"col\">PRICE</th>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("	");

	Connection conn = null; PreparedStatement pstmt = null; ResultSet rset = null; 
	String sql="select * from milk";
	String url="jdbc:mysql://localhost:3306/mbasic";
	String id="root", pass="1234";
	try {
	Class.forName("com.mysql.cj.jdbc.Driver");
	conn = DriverManager.getConnection(url,id,pass);
	pstmt =  conn.prepareStatement(sql);
	rset = pstmt.executeQuery();
	while(rset.next()) {
	//	out.println ( rset.getInt("mno")+"/"+rset.getString("mname")+"/"+rset.getInt("mprice")+"<br/>");
	  int mno = rset.getInt("mno");
	  String mname = rset.getString("mname");
	  int mprice = rset.getInt("mprice");	  
	
      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("    	<td>");
      out.print(mno);
      out.write("</td>\r\n");
      out.write("    	<td>");
      out.print(mname);
      out.write("</td>\r\n");
      out.write("    	<td>");
      out.print(mprice);
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("	");
		
	}	
	} catch (Exception e) {e.printStackTrace();}
	finally {
		if (rset != null) {rset.close();}
		if (pstmt != null) {pstmt.close();}
		if (conn != null) {conn.close();}
	}	
	
      out.write("	\r\n");
      out.write("	</tbody>	\r\n");
      out.write("  </table>  \r\n");
      out.write("</div>\r\n");
      out.write("<!-- 주문 현황 표-->\r\n");
      out.write("<!-- 주문 현황 표-->\r\n");
      out.write("<div class=\"container card my-5 bg-warning\">\r\n");
      out.write("<h3 class=\"card-header bg-wanring test-white\">Milk Order</h3>\r\n");
      out.write("  <table class=\"table table-striped table-borderd table-hover\">\r\n");
      out.write("  <caption>milk 주문 현황</caption>\r\n");
      out.write("    <thead>\r\n");
      out.write("      <tr class=\"bg=danger\">\r\n");
      out.write("        <th scope=\"col\">NO</th>\r\n");
      out.write("        <th scope=\"col\">NAME</th>\r\n");
      out.write("        <th scope=\"col\">NUM</th>\r\n");
      out.write("        <th scope=\"col\">주문날짜</th>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    \r\n");
      out.write("    ");
 
    
    Connection conn1 = null; PreparedStatement pstmt1 = null; ResultSet rset1 = null; 
	String sql1="select * from milk_order order by odate desc";
	String url1="jdbc:mysql://localhost:3306/mbasic";
	String id1="root", pass1="1234";
	try {
	Class.forName("com.mysql.cj.jdbc.Driver");
	conn = DriverManager.getConnection(url1,id1,pass1);
	pstmt =  conn.prepareStatement(sql1);
	rset = pstmt.executeQuery();
	while(rset.next()) {
	//	out.println ( rset.getInt("mno")+"/"+rset.getString("mname")+"/"+rset.getInt("mprice")+"<br/>");
	  int mno = rset.getInt("ono");
	  int onum = rset.getInt("onum");
	  String mname = rset.getString("oname");
	  String odate = rset.getString("odate");	  
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("	    	<td>");
      out.print(mno);
      out.write("</td>\r\n");
      out.write("	    	<td>");
      out.print(mname);
      out.write("</td>\r\n");
      out.write("	    	<td>");
      out.print(onum );
      out.write("</td>\r\n");
      out.write("	    	<td>");
      out.print(odate);
      out.write("</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("		");
		
		}	
		} catch (Exception e) {e.printStackTrace();}
		finally {
			if (rset != null) {rset.close();}
			if (pstmt != null) {pstmt.close();}
			if (conn != null) {conn.close();}
		}	
		
      out.write("\r\n");
      out.write("      \r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container card my-5 bg-primary\">\r\n");
      out.write("<h3 class=\"card-header bg-danger text-white my-3\">milk 주문하기</h3>\r\n");
      out.write("<div id=\"accordion\">\r\n");
      out.write("	  <!-- 주문하기  -->\r\n");
      out.write("	  <!-- 주문하기  -->	\r\n");
      out.write("	  <div class=\"card my-3 bg-primary\">\r\n");
      out.write("	    <div class=\"card-header bg-primary\">\r\n");
      out.write("	      <a class=\"btn bg-danger\" data-bs-toggle=\"collapse\" href=\"#collapseOne\">\r\n");
      out.write("	        주문하기\r\n");
      out.write("	      </a>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div id=\"collapseOne\" class=\"collapse show\" data-bs-parent=\"#accordion\">\r\n");
      out.write("	      <div class=\"card-body bg-primary\">\r\n");
      out.write("	      \r\n");
      out.write("			<form action=\"milk_insert.jsp\" method=\"post\">\r\n");
      out.write("			  <div class=\"mb-3 mt-3\">\r\n");
      out.write("			    <label for=\"oname\" class=\"form-label\">우유 이름</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control\" id=\"oname\" placeholder=\"주문할 우유를 적어주세요\" name=\"oname\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			  <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"onum\" class=\"form-label\">주문 수량</label>\r\n");
      out.write("			    <input type=\"Number\" class=\"form-control\" id=\"onum\" placeholder=\"주문 수량을 입력하세요\" name=\"onum\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			  <button type=\"submit\" class=\"btn btn-warning\">주문 접수</button>\r\n");
      out.write("			</form>	      \r\n");
      out.write("				      \r\n");
      out.write("\r\n");
      out.write("	      \r\n");
      out.write("	      </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	  <!-- 주문수정  -->\r\n");
      out.write("	  <!-- 주문수정  -->	\r\n");
      out.write("	  <div class=\"card my-3 bg-primary\">\r\n");
      out.write("	    <div class=\"card-header bg-primary\">\r\n");
      out.write("	      <a class=\"collapsed btn bg-danger\" data-bs-toggle=\"collapse\" href=\"#collapseTwo\">\r\n");
      out.write("	        주문 수정\r\n");
      out.write("	      </a>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div id=\"collapseTwo\" class=\"collapse\" data-bs-parent=\"#accordion\">\r\n");
      out.write("	      <div class=\"card-body bg-primary\">\r\n");
      out.write("	        <!-- \r\n");
      out.write("	        	action = milk_insert.jsp\r\n");
      out.write("	        	method = post (데이터 노출 안됨)\r\n");
      out.write("	        	name = oname , onum\r\n");
      out.write("	        \r\n");
      out.write("	         -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<form action=\"milk_modify.jsp\" method=\"post\">\r\n");
      out.write("			<div class=\"mb-3 mt-3\">\r\n");
      out.write("			    <label for=\"ono\" class=\"form-label\">주문 번호</label>\r\n");
      out.write("			    <input type=\"number\" class=\"form-control\" id=\"ono\" placeholder=\"수정할 주문의 번호를 입력하세요\" name=\"ono\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			\r\n");
      out.write("			  <div class=\"mb-3 mt-3\">\r\n");
      out.write("			    <label for=\"oname\" class=\"form-label\">우유 이름</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control\" id=\"oname\" placeholder=\"주문 수정할 우유의 이름을 입력하세요.\" name=\"oname\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			  <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"onum\" class=\"form-label\">주문 수량</label>\r\n");
      out.write("			    <input type=\"Number\" class=\"form-control\" id=\"onum\" placeholder=\"수정할 수량을 입력해주세요\" name=\"onum\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			  <button type=\"submit\" class=\"btn btn-warning\">수정 접수</button>\r\n");
      out.write("			</form>	      \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	      </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("      <!-- 주문삭제  -->\r\n");
      out.write("	  <!-- 주문삭제  -->	\r\n");
      out.write("	  <div class=\"card my-3 bg-primary\">\r\n");
      out.write("	    <div class=\"card-header bg-primary\">\r\n");
      out.write("	      <a class=\"collapsed btn bg-danger\" data-bs-toggle=\"collapse\" href=\"#collapseThree\">\r\n");
      out.write("	        주문 삭제\r\n");
      out.write("	      </a>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div id=\"collapseThree\" class=\"collapse\" data-bs-parent=\"#accordion\">\r\n");
      out.write("	      <div class=\"card-body bg-primary\">\r\n");
      out.write("\r\n");
      out.write("			<form action=\"milk_cancel.jsp\" method=\"post\">\r\n");
      out.write("			  <div class=\"mb-3 mt-3\">\r\n");
      out.write("			    <label for=\"ono\" class=\"form-label\">주문 번호</label>\r\n");
      out.write("			    <input type=\"number\" class=\"form-control\" id=\"ono\" placeholder=\"취소할 주문의 주문 번호를 입력하세요\" name=\"ono\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			  <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"oname\" class=\"form-label\">우유 이름</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control\" id=\"oname\" placeholder=\"취소할 수량을 입력하세요\" name=\"oname\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			  <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"onum\" class=\"form-label\">주문 수량</label>\r\n");
      out.write("			    <input type=\"Number\" class=\"form-control\" id=\"onum\" placeholder=\"취소할 수량을 입력하세요\" name=\"onum\">\r\n");
      out.write("			  </div>\r\n");
      out.write("			   <button type=\"submit\" class=\"btn btn-warning\">취소 접수</button>\r\n");
      out.write("			</form>	      \r\n");
      out.write("\r\n");
      out.write("	      </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
